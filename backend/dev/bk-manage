#!/bin/sh
### BEGIN INIT INFO
# Provides:          bk-manage
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start bk-manage at boot time
# Description:       Controls the bk-manage service.
### END INIT INFO

# Configuration
NAME="bk-manage"
APP_PATH="/app/book-management-backend"
PIDFILE="/var/run/$NAME/$NAME.pid"
LOGFILE="/var/log/$NAME/$NAME.log"
USER="root"

start() {
    echo "Starting $NAME..."
    if [ -f "$PIDFILE" ] && kill -0 "$(cat "$PIDFILE")" > /dev/null 2>&1; then
        echo "$NAME is already running."
        return 1
    fi

    # Start the application
    su -c "$APP_PATH >> $LOGFILE 2>&1 & echo \$!" $USER > "$PIDFILE"
    echo "$NAME started with PID $(cat "$PIDFILE")"
}

stop() {
    echo "Stopping $NAME..."
    if [ ! -f "$PIDFILE" ]; then
        echo "$NAME is not running (no PID file)."
        return 1
    fi

    PID=$(cat "$PIDFILE")
    if kill "$PID" > /dev/null 2>&1; then
        rm -f "$PIDFILE"
        echo "$NAME stopped."
    else
        echo "Failed to stop $NAME (process may not exist)."
    fi
}

status() {
    if [ -f "$PIDFILE" ]; then
        PID=$(cat "$PIDFILE")
        if kill -0 "$PID" > /dev/null 2>&1; then
            echo "$NAME is running with PID $PID"
            return 0
        else
            echo "$NAME is not running, but PID file exists."
            return 1
        fi
    else
        echo "$NAME is not running."
        return 3
    fi
}

restart() {
    stop
    sleep 1
    start
}

case "$1" in
    start) start ;;
    stop) stop ;;
    restart) restart ;;
    status) status ;;
    *) echo "Usage: $0 {start|stop|restart|status}" ;;
esac

exit 0
